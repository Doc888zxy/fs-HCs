#Figure 2B, C

library(Seurat)
library(monocle)


ct <- sce@assays$RNA$counts
gene_ann <- data.frame(
  gene_short_name = row.names(ct),
  row.names = row.names(ct)
)

fd <- new("AnnotatedDataFrame", data = gene_ann)
pd <- new("AnnotatedDataFrame", data = sce@meta.data)
sc_cds <- newCellDataSet(
  ct,
  phenoData = pd,
  featureData = fd,
  expressionFamily = negbinomial.size(),
  lowerDetectionLimit = 1
)

sc_cds <- estimateSizeFactors(sc_cds)

sc_cds <- estimateDispersions(sc_cds)
dd <- "diff.Rdata"
if (!file.exists(dd)) {
  diff_test_res <- differentialGeneTest(
    sc_cds,
    fullModelFormulaStr = " ~ Group"
  )
  save(diff_test_res, file = dd)
}
ordering_genes <- row.names(subset(diff_test_res, qval < 0.01))

sc_cds <- setOrderingFilter(sc_cds, ordering_genes)

plot_ordering_genes(sc_cds)
sc_cds <- reduceDimension(sc_cds, residualModelFormulaStr = "~Group")
sc_cds <- orderCells(sc_cds)
gene_to_cluster <- c('ALDOB','KHK')
library(parallel)
plot_pseudotime_heatmap(
  sc_cds[gene_to_cluster, ],
  num_clusters = nlevels(Idents(sce)),
  show_rownames = TRUE,
  cores = 4,
  return_heatmap = TRUE,
  hmcols = colorRampPalette(c("navy", "white", "firebrick3"))(100)
)

#Figure 2D 
genes_of_interest <- c("SLC2A2",  "KHK", "ALDOB")
genes_of_interest <- c( 'ALB','CD24')
pseudotime <- FetchData(sce, vars = c("pseudotime"))
gene_data <- sc_cds@assayData$exprs[genes_of_interest,] 
gene_data <- as.data.frame(t(gene_data))
gene_data$pseudotime <- pseudotime$pseudotime

gene_data[,genes_of_interest] <- scale(gene_data[,genes_of_interest])

y_min <- 0
y_max <- 2
y_margin <- 0.1 * (y_max - y_min)  
ylim_values <- c(y_min - y_margin, y_max + y_margin)
gene_data_long <- reshape2::melt(gene_data, id.vars = "pseudotime", 
                                 variable.name = "Gene", value.name = "Expression")

p <- ggplot(gene_data_long, aes(x = pseudotime, y = Expression, color = Gene)) +
  geom_smooth(method = "loess", se = FALSE, size = 1.2) +  
  scale_color_manual(values = c("#C5DEBA", "#57C3F3", "#E41A1C", '#DCC1DD','black')) +  
  labs(
    x = "Pseudotime",
    y = "Relative Gene Expression",
    color = "Gene"
  ) +
  theme_minimal(base_size = 14) +  
  theme(
    panel.grid = element_blank(),
    panel.background = element_blank(),
    axis.line = element_line(color = "black"), 
    legend.position = "right",
    plot.title = element_text(hjust = 0.5, face = "bold")  
  ) +
  coord_cartesian(ylim = ylim_values) 

